What is MeritCommons?

There is a long answer to this question, and a short answer to this question.  The short answer: MeritCommons is a next generation academic portal developed by a team here at Wayne State University.  It has all of the things we want out of a portal: organized links, single sign on, and places for announcements and integration with other applications.  The short answer is very satisfying because it doesn't pose any challenges or hint at any hidden mystery.  The short answer is the answer I give to most people.  But you are not most people.

What is MeritCommons: The Long Answer

A couple years ago when Daren and Rob hinted that I might be called upon to design, create, and lead a team to build a replacement for our enterprise portal, Luminus, I tried hard to remember what we even needed portals for.  "It's 2011 for crying out loud."  The word portal brought back memories of Xcite, Yahoo, AOL...  I hadn't used a corporate portal since the dialup days! I never even used Pipeline except to do my timesheet and to test logins for Wayne Auth.  I decided that my solution could not just be an exercise in nostalgia, but here I was, still tasked with creating this "portal"... in 2011.

So I dug deep (as deep as Wikipedia goes, anyway), and started to abstract away the concept of portal until I found something that didn't feel like putting on a sweater that was at the peak of its fashion 15 years ago.  The first few words of the paragraph for "Web_portal" on Wikipedia begin "A web portal is most often one specifically designed Web page" (ugh, "Web page!", no one says that anymore) "at a website which brings information together from diverse sources in a uniform way" ... Hmm... "brings information together from diverse sources in a uniform way".  What an honest to goodness 21st century lazy hacker I am!  The first sentence of the Wikipedia article for "Web_portal" gave me all the inspiration I'd need!

I was going to create a realtime web portal.  I was going to "bring information together from diverse sources in a uniform way" ... in realtime.  In order to do this, I'd need to break a few molds as far as web app design is concerned.  I'd need an efficient way for multiple worker nodes to communicate with each other in a cluster.  I'd need realtime connectivity to the client.  I'd need a super fast database to store the myriad data in, and I'd need a set of agent programs that run on the sidelines piping data from the various "diverse sources".  And that's not all.  Sometimes the user is the originator of a piece of data.  I'd need a way to get data from the users of our portal back in to those various systems in a realtime fashion (or offline, if realtime is just not doable).  Also, realtime data changes and updates in realtime, from various sources.  If I was going to really bring together realtime data, I should also preserve its realtime-ness and make sure it automatically updated in our portal, or at the very least, ensure the system  that I was building was capable of handing such features in the future.

I poured over dozens of open source projects, and several of my own past personal projects looking for code that could satisfy these technical needs.  I watched talks from engineers at Twitter and Facebook on capacity planning and how their systems are set up.  I read about failures, successes, and some in between.  Due to the varying levels of support and maturity offered by many of the data solutions, I tried my best to make the most sound decisions.  Initially, I had decided on ZeroMQ, which is a low level UNIX socket emulating bare metal messaging bus to handle the inter-cluster realtime.  I settled on Mojolicious as a web framework, as it was very lean, and had few dependencies, and allowed us to use Web Sockets along side traditional HTTP.  For a database, I went with MongoDB which is still one of the leading NoSQL databases.  Of these three foundational design choices, the only one that proved to be a mistake was the decision to go with MongoDB.  2 out of 3 ain't bad.  After spending months floundering to create an ORM-type interface for MongoDB, I decided to take advantage of the SQL knowledge on our team and move to a traditional database.  It took a bit of pride swallowing, but I am pretty sure that MeritCommons would not be here today had I not decided to scrap that whole subsystem and rewrite it.  In fact, only 4 months after that decision was made did we have something we could actually log in to and use.  For our RDBMS of choice I decided to go with PostgreSQL, as it has plugins that implement many of the features that attracted my team and I to the NoSQL space to begin with.

The thoughts that racked my brain the the following months mostly revolved around engineering problems like scalability, security, and sound design.  But I kept returning to this realtime aggregator theme again and again and I found all my ideas still rang true. Features just seemed to fall into place, and I found that no one could stump me with questions like "How will we do..."  That's when I started to suspect that we had something truly special.

So that was a long answer to "how did MeritCommons come about?", and I admit it kind of misses the mark on the original question "What is MeritCommons?"  This requires another trip down memory lane.  It was 2006, C&IT had just been reorganized, and I was brought down the street to work with some of the engineers at 5925 Woodward. I had just finished writing an Identity Management suite called LDIP, and was now a member of the Security and Access Management team. I remember having had a series of meetings with my then manager Morris Reynolds.  Mr. Reynolds would quiz me on various technologies, frameworks, paradigms, and buzzwords that he had picked up in this or that technical management periodical.  And I'd kind of chuckle at him and say "No one is going to use that crap, they are all going to authenticate via MySpace".  I don't think Mr. Reynolds cared too much for my disregarding these trends that his publication told him were so important, and even though I knew I was right (about the trend, not about the provider.  As we know, MySpace eventually gave way to Facebook), I didn't /like/ that I was right.  A "free" (as in "free grain" for cattle) for profit social network had no business being the arbiter of a person's identity.  Yet there we were, margins on the internet had been competitively shrunk to "free", and those companies had to make money somehow!  My distaste for the entire situation progressed as the years went on, and my predictions came true.

MeritCommons is a step in the right direction.  It's the shift of the calendar month from Eternal September+++ to regular old October. MeritCommons is academia assuming responsibility for identity in the digital age.  We already bestow people with some of humanity's most cherished credentials, namely college degrees of various disciplines and intensities, and we should not stop there.  We should curate and cultivate character and integrity in each and every one of our students.   We should give them a platform to shine and impress in formal and informal ways with a focus on academic and campus life.  We should give them a platform that will let them take the spirit and support of Wayne State with them as they live their lives off campus.  We should provide a platform that provides our faculty and staff with powerful tools which give insight into the academic success of various populations across campus.  We should provide a platform which enables streamlining business for the university, both customer facing business, and interdepartmental business.

MeritCommons is that platform.  I need your ideas, help and support to make MeritCommons a resounding success here at Wayne State University.

Thank you for your time.

+++: [In Usenet slang, Eternal September (or the September that never ended)[1] began in September 1993, the month that internet service provider America Online began offering Usenet access to its tens of thousands, and later millions, of users. Before then, every year in September, a large number of new university freshmen acquired access to Usenet for the first time, and took some time to become accustomed to Usenet's standards of conduct and "netiquette". But, after a month or so, these new users would learn the networks' social norms or simply tire of using the service. However, for the pre-existing users of Usenet, the influx of new users from September 1993 onwards was a new and endless manifestation of the phenomenon.]