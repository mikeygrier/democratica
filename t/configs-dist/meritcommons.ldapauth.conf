{
    #
    # CONFIG FILE FOR TESTS!
    #

    words_file => "/usr/share/dict/words",

    # max message size, limits file upload size
    max_message_size => 1073741824, # 1GB

    # here lies MeritCommons::Model::System, may it rest in peace.
    administrator_email => 'ak1520@wayne.edu',
    administrator_common_name => 'Michael Gregorowicz',
    hostname => 'meritcommons-dev.wayne.edu',
    port => 3000,
    https_enabled => 1,

    deployment_profile => 'testing.idp',

    # used to generate meritcommons's x.509 cert
    service_country => 'US',
    service_locality => 'Detroit',
    service_state => 'Michigan',
    service_organization => 'Wayne State University',
    service_organizational_unit => 'Computing & Information Technology',

    # how big can a message be before it's truncated?
    truncate_messages_at => 1200,

    # this is used to resolve identities, serve keys, etc.
    identity_server => 'http://meritcommons-dev.wayne.edu:3000',

    # this is the front door of the app (full url, often the same as the identity server)
    front_door_url => 'http://meritcommons-dev.wayne.edu:3000',

    # this is probably just the host in front_door_url
    front_door_host => 'meritcommons-dev.wayne.edu',

    # A link to a password reset page of some kind. If none is set, the link doesn't appear.
    # forgot_password_link => "",

    # redirect all http:// traffic to https:// (requires standard ports)
    force_ssl => 0, 

    # how long do we leave idle websockets open for
    websocket_inactivity_timeout => '300',

    # what websocket should we tell users to connect to when they ask us?
    advertised_websocket => 'ws://meritcommons-dev.wayne.edu:3000/hydrant',

    # default authenticator, runs "default" sub in namespace by default, can specify path to full sub.
    authentication_provider => 'MeritCommons::Helper::LDAPAuth',

    session_length => 28800,

    help_url => 'http://computing.wayne.edu/meritcommonshelp',

    # comment these out of you want to allow logging to the publisher.
    access_log => "/var/tmp/test_access.log",
    auth_log => "/var/tmp/test_auth.log",
    audit_log => "/var/tmp/test_audit.log",

    # this is ignored so long as access_log and auth_log are set.
    log_to_publisher => 0,

    # secret keys for external authentication pages
    external_auth_secrets => [
        {
            regex => qr/^https:\/\/login.example.edu\/.*/,
            secret => 'I&@EfRl.6)cHsBJwsdVa5jw3@R)F(qQVpw.6p3l!c!8QzU7#Ll#6b4Av*qXxYbFg',
        },
    ],

    login_token_expire_time => 120,

    # system log level for publisher logs
    system_log_level => "debug",

    # what domain the cookies are set for.
    cookie_domain => 'meritcommons-dev.wayne.edu',
    cookie_top_domain => 'meritcommons-dev.wayne.edu',

    # directory in which to store local assets (profile pictures, etc)
    local_asset_path => '/usr/local/meritcommons/var/public',

    # testtitinngnggngggg
    deployment_profile => 'testing.idp',

    ## END FLOCK COORDINATOR OPTIONS

    #publish_to => ['ipc:///var/tmp/1313', 'flock://find_publisher'], # where the publisher binds
    #publishers => ['ipc:///var/tmp/1313', 'flock://find_publisher'], # where the subscribers connect to

    # for the ZeroMQ Publisher
    publish_to => ['ipc:///var/tmp/1313'], # where the publisher binds
    publishers => ['ipc:///var/tmp/1313'], # where the subscribers connect to

    user => 'nobody', # the user the publisher & the system runs as

    # moved this closer to the top, this contains most of what was in MeritCommons::Model::System::AuthenticationProfile, anyway.
    ldap_connect_info => {
        # privileged account
        ldap_priv_bind_dn => 'cn=Script Manager, ou=System Groups, ou=Groups, dc=wayne, dc=edu',

        # privileged account password
        ldap_priv_bind_pass => '',

        # how to connect to the LDAP resource
        ldap_host => 'ldap.wayne.edu',

        # ldap scheme
        ldap_scheme => 'ldaps',

        # ldap port
        ldap_port => 636,

        # where to start searching for users
        base_dn => 'dc=wayne,dc=edu',

        # how to search for users, an LDAP filter
        search_filter => 'uid=${username}',

        # users identified by
        unique_id_field => 'uid',
    },

    database_connect_info => {
        # PGSQL w/ UTF-8
        primary => ['dbi:Pg:host=127.0.0.1;port=25511;dbname=meritcommons', undef, undef, { pg_enable_utf8 => 1 }],
    },

    #plugins => ['MeritCommons::Plugin::Banner', 'MeritCommons::Plugin::Wayne', 'MeritCommons::Plugin::CasServer'],

    plugins => [],

    sphinx => {
        dsn => 'dbi:mysql:host=127.0.0.1;port=19306;mysql_enable_utf8=1',
        host => 'localhost',
        port => 19312,
    },

    # hypnotoad specific configuration
    hypnotoad => {
        listen => ['http://*:80', 'https://*:443'],
        workers => 4,
        user => 'vagrant',
    },

    # Set theme here. Will be the same name as the theme folder in `theme/`
    theme => 'meritcommons',

    status_prompts => [
        "What's new in Midtown?",
        "What's on your mind?",
        "What's happening?",
        "What's going on?",
        "What happened in class today?",
        "What's up, warrior?",
    ],

    latex => {
        tmpdir      => '/tmp',
        imgoutdir   => '/usr/local/meritcommons/var/public/mathimg',
        imgurlpath  => '/mathimg',
    },    

    stream_reserved_names => [
        'MeritCommons',
        'WSU',
        'Wayne State',
        qr/^[a-zA-Z]{2}\d{4}$/, # AccessIDs
        qr/^[A-Z0-9]{2,3}_\d{4}_\d{4}_[A-Z0-9]{1,5}(_[0-9]{5})?$/ # Blackboard Course IDs
    ],

    # used for processing image uploads
    default_transform => 'medium',

    image_transforms => {
        'tiny' => [
            {
                'thumbnail' => {
                    'geometry' => '30x30^',
                },
            },
            {
                'extent' => {
                    'geometry' => '30x30',
                    'gravity'  => 'center',
                },
            },
        ],
        'thumbnail' => [
            {
                'thumbnail' => {
                    'geometry' => '64x64^',
                },
            },
            {
                'extent' => {
                    'geometry' => '64x64',
                    'gravity'  => 'center',
                },
            },
        ],
        'large' => [
            {
                'resize' => {
                    'geometry' => '600x',
                },
            },
        ],
        'medium' => [
            {
                'resize' => {
                    'geometry' => '400x',
                },
            },
        ],
        'small' => [
            {
                'resize' => {
                    'geometry' => '300x',
                },
            },
        ],
    },

    # Provoke Morbo the Annihilator (SIGKILL for devdaemon)
    # brutal_morbo => 1,

    # Default title for the sidebar subscription listing block
    #default_subscription_block_title => 'Other Streams',
};
