#
# Data Model for Access Tokens and Refresh Tokens
# (c) 2015 Wayne State University 
#

package MeritCommons::Plugin::OAuth2::Model::Token;

use base qw/DBIx::Class/;

__PACKAGE__->load_components(qw/PK::Auto Core/);
__PACKAGE__->table('ap_oauth2_token');

__PACKAGE__->add_columns(
    id => {
        is_auto_increment => 1,
        data_type         => 'integer',
        is_numeric        => 1,
    },
    # the user record of the resource owner
    meritcommons_user => {
        data_type      => 'integer',
        is_numeric     => 1,
        is_foreign_key => 1,
    },
    # the client record
    client => {
        data_type => 'integer',
        is_numeric => 1,
        is_foreign_key => 1,
    },
    # uuid of token
    unique_id => {
        data_type => 'varchar',
        size      => 64,
    },
    # used to access credentials necessary for creating WayneAuth and MeritCommons sessions (encd key)
    auxiliary_secret => {
        data_type => 'varchar',
        size => 255,
        is_nullable => 1,
    },
    # the sha256_hex of the key used to sign this token
    signer_thumbprint => {
        data_type => 'varchar',
        size => 64,
    },
    # boolean that indicates if this token has been revoked or not
    is_revoked => {
        data_type => 'integer',
        is_numeric => 1,
        default_value => 0,
    },
    revocation_time => {
        data_type => 'integer',
        is_nullable => 1,
    },
    expire_time => {
        data_type => 'integer',
        is_numeric => 1,
    },
    create_time => {
        data_type  => 'integer',
        is_numeric => 1,
    },
    modify_time => {
        data_type  => 'integer',
        is_numeric => 1,
    },

    ### refresh tokens only
    # boolean that indicates if this token is a refresh token
    is_refresh_token => {
        data_type => 'integer',
        is_numeric => 1,
        default_value => 0,
    },
    # keeps track of how many tokens have been generated by this refresh token.
    number_issued => {
        data_type => 'integer',
        is_numeric => 1,
        default_value => 0,
    },

    ### access tokens only
    # accessor to the refresh token that issued this access token.
    refresh_token => {
        data_type => 'integer',
        is_numeric => 1,
        is_nullable => 1,
        is_foreign_key => 1,
    },
);

__PACKAGE__->set_primary_key('id');
__PACKAGE__->belongs_to(meritcommons_user   => 'MeritCommons::Model::User');
__PACKAGE__->belongs_to(client           => 'MeritCommons::Plugin::OAuth2::Model::Client');
__PACKAGE__->might_have(refresh_token    => 'MeritCommons::Plugin::OAuth2::Model::Token');

# do this extra stuff on insert
sub insert {
    my ($self, @args) = @_;
    $self->create_time(time);
    $self->modify_time(time);
    $self->next::method(@args);
}

sub update {
    my ($self, @args) = @_;
    $self->modify_time(time);
    $self->next::method(@args);
}

sub sqlt_deploy_hook {
    my ($self, $sqlt_table) = @_;

    $sqlt_table->add_index(
        name   => 'ap_oauth2_token_unique_id_idx',
        fields => ['unique_id'],
    );

    $sqlt_table->add_index(
        name   => 'ap_oauth2_token_signer_thumbprint_idx',
        fields => ['signer_thumbprint'],
    );
}

# cannot be undone.
sub revoke {
    my ($self) = @_;
    $self->is_revoked(1);
    $self->revocation_time(time);
    $self->update;
}

1;